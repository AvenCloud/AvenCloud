version: 2

defaults: &defaults
  docker:
    - image: circleci/node:10
  working_directory: ~/project

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - yarn-dependencies-{{ checksum "yarn.lock" }}
      - run: |
          yarn install --frozen-lockfile --network-concurrency 1
      - save_cache:
          key: yarn-dependencies-{{ checksum "yarn.lock" }}
          paths: ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths: .
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          yarn run lint
  test-js:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn test -- --coverage
      - store_artifacts:
          path: coverage
          destination: coverage
  test-sql:
    machine: true
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project

      - run: curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs

      - run: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt-get update && sudo apt-get install yarn

      - run: yarn test-sql
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          sudo apt install rsync
          git config --global user.email "admin@aven.io"
          git config --global user.name "Aven Bot"
          yarn global add heroku
          yarn deploy aven-io
workflows:
  version: 2
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - test-js:
          requires:
            - install-dependencies
      - test-sql:
          requires:
            - install-dependencies
      - deploy:
          requires:
            - lint
            - test-js
            - test-sql
