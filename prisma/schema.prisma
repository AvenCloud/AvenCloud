datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  email               String?   @unique
  phone               String?   @unique
  name                String?
  passwordSalt        String?
  passwordHash        String?
  stripeCustomerId    String?
  giftedAccess        Int       @default(0)
  subscribedAccess    Int       @default(0)
  subscriptionEndTime DateTime?
  publicBio           String?
  Comment             Comment[]
  Clip                Clip[]

  Sites               Site[]
}

model EmailValidation {
  id        Int      @id @default(autoincrement())
  emailTime DateTime @default(now())
  email     String
  secret    String   @unique
}

model PhoneValidation {
  id       Int      @id @default(autoincrement())
  sendTime DateTime @default(now())
  phone    String
  secret   String   @unique
}

model Comment {
  id          Int      @id @default(autoincrement())
  publishTime DateTime @default(now())
  page        String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  message     String
}

// Cloud 2

model Site {
  id          Int    @id @default(autoincrement())
  name        String @unique
  ownerId     Int
  owner       User   @relation(fields: [ownerId], references: [id])
}

model SiteNode {
  id            Int       @id @default(autoincrement())
  key           String
  siteId        Int
  site          Site      @relation(fields: [siteId], references: [id])
  parentNodeId  Int?
  parentNode    SiteNode? @relation(fields: [parentNodeId], references: [id])
  schema        Json?
  value         Json?
  @@unique([siteId, key, parentNodeId], name: "SiteNodeId")
}

// ClipClock

model Clip {
  id          Int       @id @default(autoincrement())
  draftTime   DateTime  @default(now())
  publishTime DateTime?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  caption     String?
  tags        ClipTag[]
}

model Tag {
  id      String    @id
  ClipTag ClipTag[]
}

model ClipTag {
  clipId Int
  clip   Clip   @relation(fields: [clipId], references: [id])
  tagId  String
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@unique([clipId, tagId], name: "ClipTag_id")
}
